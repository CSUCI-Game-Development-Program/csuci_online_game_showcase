---
layout: base.liquid  
title: Games
data: games
alias: game
---

<section class="landing">
  <h2 class="text-center">- Collections -</h2>
  <div class="row"></div>
  <div class="container row list">
    <div class="col-md-6">
    <input type="text" class="form-control" id="searchInput" onkeyup="searchTable()" placeholder="Search...">
    <br>
    </div>
    <div class="col-md-12">
      <table id="gameTableBody" class="table">
      <thead>
        <tr>
          <th>Title</th>
          <th>Developer</th>
          <th>Date</th>
          <th>Environment</th>
        </tr>
        </thead>
        <tbody>
          {% for game in games %}
            <tr>
              <td>
              <a href="/games/{{ game.title | slugify }}-{{ game.developer | slugify }}.html" class="game-link">{{ game.title }}</a>
              </td>
              <td>{{ game.developer }}</td>
              <td>{{ game.datesubmitted }}</td>
              <td>{{ game.environment }}</td>
            </tr>
          {% endfor %}
        </tbody>
      </table>
  </div>
    </div>
  </div>
</section>


<!-- Bootstrap JS and jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
  function searchTable() {

// Declare variables
    var input, filter, table, tr, td, i, txtValue, rowCount;

    input = document.getElementById("searchInput");
    filter = input.value.toUpperCase();
    table = document.getElementById("gameTableBody");
    tr = table.getElementsByTagName("tr");
    rowCount = 0;

// Loop through all table rows, and hide those that don't match the search query
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td");
      for (var j = 0; j < td.length; j++) {
        if (td[j]) {
          txtValue = td[j].textContent || td[j].innerText;
          if (txtValue.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
            rowCount++;
            break;
          } else {
            tr[i].style.display = "none";
          }
        }
      }

// Display only 20 rows at a time
      if (rowCount >= 15) {
        for (var k = i + 1; k < tr.length; k++) {
          tr[k].style.display = "none";
        }
        break;
      }
    }
  }
  document.addEventListener('DOMContentLoaded', function() {
    // Show only the first 20 rows of the table
    const gameTableBodyRows = document.querySelectorAll('#gameTableBody tr');
    for (let i = 15; i < gameTableBodyRows.length; i++) {
      gameTableBodyRows[i].style.display = 'none';
    }
  
    // Add "Show More" button
    const showMoreButton = document.createElement('button');
    showMoreButton.classList.add('btn', 'btn-primary');
    showMoreButton.textContent = 'Show More';
    showMoreButton.addEventListener('click', function() {
      const hiddenRows = document.querySelectorAll('#gameTableBody tr:not([style*="display: table-row"])');
      const numToShow = hiddenRows.length > 20 ? 20 : hiddenRows.length;
      for (let i = 0; i < numToShow; i++) {
        hiddenRows[i].style.display = 'table-row';
      }
      const buttonText = hiddenRows.length > numToShow ? 'Show More' : 'End';
      showMoreButton.textContent = buttonText;
    });
  
    document.querySelector('.list').appendChild(showMoreButton);
  });
  

  
</script>