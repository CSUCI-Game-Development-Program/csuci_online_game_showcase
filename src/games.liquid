---
layout: base.liquid
title: Games
data: games
alias: game
---
<button class="scrollToTopBtn">
  <a href="#top" class="showBtn">
    <img
      src="../assets/img/white-arrow.png"
      width="40%"
      height="40%">
  </a>
</button>
<section class="landing">
  <h2 class="text-center">- Collections -</h2>
  <div class="container row">
    <div id="tools" class="col-md-4 tools-container">
      <input
        type="text"
        class="form-control"
        id="searchInput"
        onkeyup="searchTable()"
        placeholder="Search...">
    </div>
    <div class="col-md-4"></div>
    <div class="col-md-4 toggle">
      <button id="toggleViewBtn" onclick="toggleView()">Toggle List</button>
    </div>


    <div class="col-md-12">
      <div id="cardGridView" class="card-grid">
        {% for game in games %}
          <div class="card">
            <h4>
              <a href="/games/{{ game.title | slugify }}-{{ game.developer | slugify }}.html" class="game-link">
                {{ game.title }}
              </a>
            </h4>
            <br>
            <img src="../assets/game_screenshots/{{ game.filename }}.png">
            <br>
            <p>Developer: {{ game.developer }}
              <br>
              Date: {{ game.datesubmitted }}
              <br>
              Environment: {{ game.environment }}</p>
            <br>
            <a href="{{ game.link }}" target="_blank">
              <button class="btn-link-row">Download</button>
            </a>
          </div>
        {% endfor %}
      </div>
      <table
        id="gameTableView"
        class="table"
        style="display: none;">
        <thead>
          <tr>
            <th>Title</th>
            <th>Developer</th>
            <th>Date</th>
            <th>Environment</th>
            <th>Game File</th>
          </tr>
        </thead>
        <tbody>
          {% for game in games %}
            <tr class="link-row">
              <td>
                <a href="/games/{{ game.title | slugify }}-{{ game.developer | slugify }}.html" class="game-link">
                  {{ game.title }}
                </a>
              </td>
              <td>{{ game.developer }}</td>
              <td>{{ game.datesubmitted }}</td>
              <td>{{ game.environment }}</td>
              <td>
                <a href="{{ game.link }}" target="_blank">
                  <button class="btn-link-row">Download</button>
                </a>
              </td>
            </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
  </div>
</section>

<!-- Search bar script -->
<script>
  function searchTable() {
    var input,
      filter,
      cardGrid,
      card,
      cardTitle,
      cardDeveloper,
      cardTable,
      table,
      tr,
      td,
      i,
      txtValue,
      rowCount;

    input = document.getElementById("searchInput");
    filter = input.value.toUpperCase();
    cardGrid = document.getElementById("cardGridView");
    card = cardGrid.getElementsByClassName("card");
    cardTable = document.getElementById("gameTableView");
    table = cardTable.getElementsByTagName("tr");
    rowCount = 0;

// Loop through card grid and hide/show cards based on search query
    for (i = 0; i < card.length; i++) {
      cardTitle = card[i].querySelector(".game-link");
      cardDeveloper = card[i].querySelector("p:nth-child(2)");
      txtValue = cardTitle.textContent || cardTitle.innerText;
      txtValue += cardDeveloper.textContent || cardDeveloper.innerText;

      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        card[i].style.display = "";
      } else {
        card[i].style.display = "none";
      }
    }

// Loop through table rows and hide/show rows based on search query
    for (i = 0; i < table.length; i++) {
      td = table[i].getElementsByTagName("td");
      for (var j = 0; j < td.length; j++) {
        if (td[j]) {
          txtValue = td[j].textContent || td[j].innerText;
          if (txtValue.toUpperCase().indexOf(filter) > -1) {
            table[i].style.display = "";
            rowCount++;
            break;
          } else {
            table[i].style.display = "none";
          }
        }
      }
    }

// Show "No results" message if no matching rows or cards found
    var noResultsMsg = document.getElementById("noResultsMsg");
    if (rowCount === 0) {
      noResultsMsg.style.display = "block";
    } else {
      noResultsMsg.style.display = "none";
    }
  }

  function toggleView() {
    var cardGridView = document.getElementById("cardGridView");
    var tableView = document.getElementById("gameTableView");
    var toggleBtn = document.getElementById("toggleViewBtn");

    if (cardGridView.style.display === "none") {
      cardGridView.style.display = "grid";
      tableView.style.display = "none";
      toggleBtn.innerText = "List View";
    } else {
      cardGridView.style.display = "none";
      tableView.style.display = "table";
      toggleBtn.innerText = "Card Grid";
    }
  }

// Set the initial view to card grid
  window.onload = function() {
    var cardGridView = document.getElementById("cardGridView");
    var tableView = document.getElementById("gameTableView");
    var toggleBtn = document.getElementById("toggleViewBtn");

    cardGridView.style.display = "grid";
    tableView.style.display = "none";
    toggleBtn.innerText = "List View";
  };
</script>